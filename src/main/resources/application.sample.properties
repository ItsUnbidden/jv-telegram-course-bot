spring.application.name=telegram-courses-bot
spring.datasource.url=jdbc:mysql://example-db.com:3306/telegram_courses_platform_db?serverTimezone=UTC
spring.datasource.username=username
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Application logging level. Spring logging will be restricted to the default INFO level.
logging.level.com.unbidden.telegramcoursesbot=DEBUG

# Initial bot token
telegram.bot.authorization.start_bot.token=initial_bot_token

# Initial bot name
telegram.bot.authorization.start_bot.name=test_bot

# Bot father token
telegram.bot.authorization.bot_father.token=botfather_token

# Director id. Director has total authority over the application (cross-bot authority)
telegram.bot.authorization.director.id=telegram_user_id

# Path to localization directories
telegram.bot.message.text.path=localizations

# Localization files format (should be like .txt).
telegram.bot.message.text.format=.txt

# Language codes priority (from most inportant to least important, example: en, ru). These 
# languages will only be used if user prefered localization is not available.
telegram.bot.message.language.priority=ru, en

# Amount of seconds after which a user response session will expire.
telegram.bot.message.session.expiration=600

# Amount of milliseconds after which sessions will be checked for expiration before repeating.
telegram.bot.message.session.schedule.delay=300000

# Amount of seconds after which a multipage meta will expire.
telegram.bot.message.multipage.meta.expiration=600

# Amount of milliseconds after which multipage metas will be checked for expiration
# before repeating.
telegram.bot.message.multipage.meta.schedule.delay=300000

# Amount of milliseconds after which timed triggers will be checked.
telegram.bot.message.course.trigger.schedule.delay=30000

# How many new reviews will be shown per request.
telegram.bot.reviews.page_size=3

# Directory in which temorary files required for archive review generation will be stored.
telegram.bot.reviews.archive.temp.path=temp/reviews

# Secret key to ensure webhook requests are comming from Telegram.
telegram.bot.webhook.secret=jfoaodscon2h934ddsfwoifj3498f3epmOPAHDFH3QHODLNCS\
        ANCQUIQksir23uqudjspji34jU4RUjfh93 (this is an example, please change it before using)

# Address of the current tomcat server.
telegram.bot.webhook.url=https://example.com

# Required only if there is no DNS.
telegram.bot.webhook.ip=

# The amount of simultaneous connections that is allowed.
telegram.bot.webhook.max_connections=40

# Whether use of custom certificate is necessary. Needed if there is no DNS.
telegram.bot.webhook.use_certificate=false

# Directory in which images for invoices are located.
telegram.bot.invoice.images.path=invoice/images

# SSL certificate paths. You have to place your public and private keys in there.
server.ssl.certificate=classpath:/fullchain.pem
server.ssl.certificate-private-key=classpath:/privkey.pem
