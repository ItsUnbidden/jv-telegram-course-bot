spring.application.name=telegram-courses-bot
spring.datasource.url=db_url
spring.datasource.username=db_username
spring.datasource.password=db_password
spring.datasource.driver-class-name=db_driver_class_name (com.mysql.cj.jdbc.Driver)

# Bot API Token
telegram.bot.authorization.token=bot_token

# Default admin id. Will be removed soon.
telegram.bot.authorization.default.admin.id=default_admin_id

# Path to localization directories
telegram.bot.message.text.path=src/main/resources/text

# Localization files format.
telegram.bot.message.text.format=.txt

# Language codes priority (from most inportant to least important, example: en, ru). These 
# languages will only be used if user prefered localization is not available.
telegram.bot.message.language.priority=en, ru

# Amount of seconds after which a user response session will expire.
telegram.bot.message.session.expiration=600

# Whether test course will be available in places other then /testcourse command.
telegram.bot.course.show-test-course=true

# How many new reviews will be shown per request.
telegram.bot.reviews.page_size=3

# Directory in which temorary files required for archive review generation will be stored.
telegram.bot.reviews.archive.temp.path=src/main/resources/temp/reviews

# Secret key to ensure webhook requests are comming from Telegram.
telegram.bot.webhook.secret=secret_key (supposed to be quite long)

# Address of the current tomcat server.
telegram.bot.webhook.url=server_url

# Required only if there is no DNS.
telegram.bot.webhook.ip=server_ip

# The amount of simultaneous connections that is allowed.
telegram.bot.webhook.max-connections=40

server.port=443
server.ssl.certificate=classpath:/YOURPUBLIC.pem
server.ssl.certificate-private-key=classpath:/YOURPRIVATE.key
